SimRobotCore2 = cppDynamicLibrary + {

  folder = "Libs"
  root = "$(simRobotDir)/Src/SimRobotCore2"
  files = {
    "$(simRobotDir)/Src/SimRobotCore2/**.cpp" = cppSource
    "$(simRobotDir)/Src/SimRobotCore2/**.h"
  }

  qtRessourceFiles = "$(simRobotDir)/Src/SimRobotCore2/Icons/**.png"
  qtRccFiles = "$(simRobotDir)/Src/SimRobotCore2/SimRobotCore2.qrc"
  qtMocFiles = {
    "$(simRobotDir)/Src/SimRobotCore2/ActuatorsWidget.h"
    "$(simRobotDir)/Src/SimRobotCore2/SensorWidget.h"
    "$(simRobotDir)/Src/SimRobotCore2/SimObjectWidget.h"
  }
  files += qtFiles

  defines += {
    if (host == "Win32") {
      "_CRT_SECURE_NO_DEPRECATE"
      "D_SCL_SECURE_NO_WARNINGS"
    }
    if (configuration != "Debug") {
      "QT_NO_DEBUG"
    } else {
      "EIGEN_INITIALIZE_MATRICES_BY_NAN"
    }
  }

  includePaths = {
    "$(simRobotDir)/Src/SimRobotCore2"
    "$(simRobotDir)/Util/Eigen"
    if (platform == "Linux") {
      "$(qtinclude)"
      "$(qtinclude)/QtCore"
      "$(qtinclude)/QtGui"
      "$(qtinclude)/QtOpenGL"
      "$(qtinclude)/QtWidgets"
      "$(utilDirRoot)/ode/Linux/include"
    } else if (host == "Win32") {
      "$(utilDirRoot)/glew/Windows/include"
      "$(utilDirRoot)/ode/Windows/include"
      "$(utilDirRoot)/qt/Windows/include"
      "$(utilDirRoot)/qt/Windows/include/QtCore"
      "$(utilDirRoot)/qt/Windows/include/QtGui"
      "$(utilDirRoot)/qt/Windows/include/QtOpenGL"
      "$(utilDirRoot)/qt/Windows/include/QtWidgets"
    }
  }

  libPaths = {
    if (platform == "Linux") {
      "$(utilDirRoot)/ode/Linux/lib"
    } else if (host == "Win32") {
      "$(utilDirRoot)/glew/Windows/lib"
      "$(utilDirRoot)/ode/Windows/lib"
      "$(utilDirRoot)/qt/Windows/lib"
    }
  }

  libs = {
    if (platform == "Linux") {
      "Qt5Core", "Qt5Gui", "Qt5OpenGL", "Qt5Widgets"
      "rt", "pthread", "ode", "GLEW", "GLU", "GL"
    } else if (host == "Win32") {
      if (configuration == "Debug") {
        "Qt5Cored", "Qt5Guid", "Qt5OpenGLd", "Qt5Widgetsd"
        "ode_doublesd"
      } else {
        "Qt5Core", "Qt5Gui", "Qt5OpenGL", "Qt5Widgets"
        "ode_doubles"
      }
      "opengl32", "glu32", "glew32",
    }
  }

  cppFlags += {
    if (tool == "vcxproj") {
      if (configuration != "Debug") {
        "/GL /GS-"
      }
    }
  }

  linkFlags += {
    if (tool == "vcxproj") {
      if (configuration == "Debug") {
        "/NODEFAULTLIB:msvcrt.lib"
      } else {
        "/LTCG"
      }
    }
  }
}
