----------------------------------------------
Projektbeschreibung 23-Audio-Kommunikation
Datum:	02.01.2024 
Name:	Manuel Heß
Version: 1.3
----------------------------------------------

Stage 1: 23-Audio-Kommunikation

- Projekt nennen:
Die Kommunikation zwischen den Robotern zu verbessern, in dem Binäre Audio-Kommunikation eingesetzt wird, welche keine W-Lan-Bandbreite verbraucht. Die Bandbreite der NAO's wird durch bbc künstlich eingeschränkt, die Durchschnittliche Frequenz zwischen zwei gesendeten Nachrichten liegt bei 3-5 Sekunden.

- Stand der Dinge (Wo setze ich an?):
Im Branch 74-feature-beepcomms funktioniert prototypisch und lässt die NAO's Geräusche senden und empfangen.
--> Roboter können Töne abgeben
--> Roboter können Töne aufnehmen
--> Roboter können Töne abgeben, jetzt muss der Ton koordiniert werden
--> Kopie von 74-feature-beepcomms erstellen

- Ausblick auf das Projekt (Was ist zu tun?):
  
   - Technische Anforderungen (Was brauche ich an Technik / Algorithmik / Funktionalität?):
	--> Roboter können Töne abgeben, jetzt muss der Ton koordiniert werden
	--> Roboter sollen auf mehrere Töne reagieren können
	
	- Erstellen einer Funktion mit den Parametern:	-Wer hat den Ton gesendet?
							-Welche Bits wollen wir senden (bisher 1 Bit, können aber bis zu 5 Bit senden, da 200Hz Schritte)
							-Vektor mit 5 Bit erstellen und Töne aditiv in Teilschwingungen codieren
							-Wie lange ist die mindest Pulsdauer

   - Was muss ich technisch dafür anfassen?
	Ich muss Töne mit verschiedenen Frequenzen und Abspieldauer erstellen/aufnehmen

   - Was habe ich in der Codebase technisches dazu gefunden?
	- In den Skill.h:
/**
   * DEBUG SKILL
   * This skill makes the Nao say something if it differs from what was said in the last frame.
   * @param name The text to be synthesized and pronounced
   * @param speed Use speed < 1 to talk slower and speed > 1 to talk faster.
   */
  SKILL_INTERFACE(Say, (const std::string&) text, (float)(1.f) speed);

	- Der Branch 74-feature-beepcomms wird nach weiteren Funktionen durchsucht

   - Wie teste ich das die Töne aufgenommen werden?
	-Ich nehme mit meinem Handy die Töne, welche ... erzeugt wurden, auf. Die Aufgenommenen Töne spiele ich dem NAO vor
	-Nachdem der erste Test erfolgreich war muss ich noch schazen, ob die kommunikation zwischen den NAO's auch funktioniert wenn zwei oder mehr gleichzeitig Töne von sich geben

   - Abschluss-Betonung: Was setze ich im ersten Teil des Projekts um?
	- Nao erzeugt Ton
	- Die Bits sagen aus was mit dem Ton gemeint ist
	- Töne dem NAO vorspielen zum testen

- Ablaufplan:
   - Töne ertsellen und drei Spielsituationen (Leo, Hintermann, Torwart steht falsch herum) zuweisen
   - Herausfinden wann die NAO's diese Ausrufe wirklich anwenden sollen/müssen
   - Nachdem die Töne erstellt sind, diese einem NAO vorspielen und ihn druaf reagieren lassen, erst mit einem Licht an den Ohren und später 
     dann mit der Aktion, welche ausgeführt werden soll
   - Mein Ziel in dem Projekt ist es schnelle und bessere Kommunikation in der Aufstellungsphase des Spiels zu erreichen