// This is the field configuration for the indoor SPL field 2016

// RZWEI - Markus
// Scaled the outer field lines to our 6m x 4m field
// only moved the Goal Box (here: "PenaltyArea"), Goals and Penalty Mark
// Field Boarders are the same for now
// Changes of the standard values are commented above them

// Meassured field dimension by Markus:
// Field length: 6060
// FieldBoarder length: 6110
// Field width: 3995
// Field border width: on average 5000
// Goalbox length Left: 580, Right: 560
// Goalbox area width: Left 2150 Right 2200
// Penalty Cross distance: Left 980 Right: 1020
// Centre Circle Diameter: 1500

// Changed to R2 Field meassures
xPosOpponentFieldBorder = 4055;         // origin -> far field boundary


// Changed: reduced by 1500
xPosOpponentGoal = 3555;                // origin -> middle far side of goal 
xPosOpponentGoalPost = 3025;            // origin -> middle goal post
xPosOpponentGroundline = 3000;          // origin -> middle goal line
xPosOpponentGoalArea = 2400;         // origin -> middle near penalty area line
xPosOpponentPenaltyArea = 1900;         // origin -> middle near penalty area line
xPosOpponentPenaltyMark = 2100;         // origin -> middle penalty mark
xPosPenaltyStrikerStartPosition = 700;


// Not changed
xPosHalfWayLine = 0;
xPosOwnPenaltyMark = -xPosOpponentPenaltyMark;
xPosOwnPenaltyArea = -xPosOpponentPenaltyArea;
xPosOwnGoalArea = -xPosOpponentGoalArea;
xPosOwnGroundline = -xPosOpponentGroundline;
xPosOwnGoalPost = -xPosOpponentGoalPost;
xPosOwnGoal = -xPosOpponentGoal;
xPosOwnFieldBorder = -xPosOpponentFieldBorder;

//Changed to R2 Field measures
yPosLeftFieldBorder = 2500;             // origin -> side field boundary


// Changed: reduced by 1000
yPosLeftSideline = 2000;                // origin -> middle side line


// Not Changed
yPosLeftPenaltyArea = 1333;             // origin -> middle left penalty area line
yPosLeftGoal = 800;                     // origin -> middle left goal post
yPosCenterGoal = 0;
yPosRightGoal = -yPosLeftGoal;
yPosRightPenaltyArea = -yPosLeftPenaltyArea;
yPosRightSideline = -yPosLeftSideline;
yPosRightFieldBorder = -yPosLeftFieldBorder;
yPosLeftGoalArea = 1100;                // origin -> middle left goal area line
yPosRightGoalArea = -yPosLeftGoalArea;

fieldLinesWidth = 50;
centerCircleRadius = 750;
goalPostRadius = 50;
crossBarRadius = goalPostRadius;
goalHeight = 900;
penaltyMarkSize = 100;

goalFrameLines = [
  {
    from = {x = xPosOwnGoalPost; y = yPosLeftGoal;};
    to   = {x = xPosOwnGoal; y = yPosLeftGoal;};
  },
  {
    from = {x = xPosOwnGoal; y = yPosLeftGoal;};
    to   = {x = xPosOwnGoal; y = yPosRightGoal;};
  },
  {
    from = {x = xPosOwnGoalPost; y = yPosRightGoal;};
    to   = {x = xPosOwnGoal; y = yPosRightGoal;};
  },
  {
    from = {x = xPosOpponentGoalPost; y = yPosLeftGoal;};
    to   = {x = xPosOpponentGoal; y = yPosLeftGoal;};
  },
  {
    from = {x = xPosOpponentGoal; y = yPosLeftGoal;};
    to   = {x = xPosOpponentGoal; y = yPosRightGoal;};
  },
  {
    from = {x = xPosOpponentGoalPost; y = yPosRightGoal;};
    to   = {x = xPosOpponentGoal; y = yPosRightGoal;};
  },
];

fieldLines = [
  // field border lines
  {
    from = {x = xPosOpponentGroundline; y = yPosRightSideline;};
    to   = {x = xPosOpponentGroundline; y = yPosLeftSideline;};
  },{
    from = {x = xPosOpponentGroundline; y = yPosLeftSideline;};
    to   = {x = xPosOwnGroundline;      y = yPosLeftSideline;};
  },{
    from = {x = xPosOwnGroundline;      y = yPosLeftSideline;};
    to   = {x = xPosOwnGroundline;      y = yPosRightSideline;};
  },{
    from = {x = xPosOwnGroundline;      y = yPosRightSideline;};
    to   = {x = xPosOpponentGroundline; y = yPosRightSideline;};
  },

// center line
  {
    from = {x = xPosHalfWayLine; y = yPosLeftSideline;};
    to   = {x = xPosHalfWayLine; y = yPosRightSideline;};
  },

// penalty areas
  {
    from = {x = xPosOwnGroundline;  y = yPosLeftPenaltyArea;};
    to   = {x = xPosOwnPenaltyArea; y = yPosLeftPenaltyArea;};
  },{
    from = {x = xPosOwnPenaltyArea; y = yPosLeftPenaltyArea;};
    to   = {x = xPosOwnPenaltyArea; y = yPosRightPenaltyArea;};
  },{
    from = {x = xPosOwnPenaltyArea; y = yPosRightPenaltyArea;};
    to   = {x = xPosOwnGroundline;  y = yPosRightPenaltyArea;};
  },

  {
    from = {x = xPosOpponentGroundline;  y = yPosLeftPenaltyArea;};
    to   = {x = xPosOpponentPenaltyArea; y = yPosLeftPenaltyArea;};
  },{
    from = {x = xPosOpponentPenaltyArea; y = yPosLeftPenaltyArea;};
    to   = {x = xPosOpponentPenaltyArea; y = yPosRightPenaltyArea;};
  },{
    from = {x = xPosOpponentPenaltyArea; y = yPosRightPenaltyArea;};
    to   = {x = xPosOpponentGroundline;  y = yPosRightPenaltyArea;};
  },

// penalty and center marks
// Changed: move according to R2 Field
  {
    from = {x = 2050; y = 0;};
    to   = {x = 2150; y = 0;};
  },{
    from = {x = xPosOpponentPenaltyMark; y = -fieldLinesWidth;};
    to   = {x = xPosOpponentPenaltyMark; y =  fieldLinesWidth;};
  },

  {
    from = {x = -2050; y = 0;};
    to   = {x = -2150; y = 0;};
  },{
    from = {x = xPosOwnPenaltyMark; y = -fieldLinesWidth;};
    to   = {x = xPosOwnPenaltyMark; y =  fieldLinesWidth;};
  },

  {
    from = {x = -fieldLinesWidth; y = 0;};
    to   = {x =  fieldLinesWidth; y = 0;};
  }
];

centerCircle = {
  center = {x = xPosHalfWayLine; y = 0;};
  radius = centerCircleRadius;
  numOfSegments = 16;
};

corners = {
  xCorner = [
    {x = xPosHalfWayLine; y = centerCircleRadius;},
    {x = xPosHalfWayLine; y = -centerCircleRadius;}
  ];

  tCorner0 = [
    {x = xPosHalfWayLine; y = centerCircleRadius;},
    {x = xPosHalfWayLine; y = -centerCircleRadius;},
    {x = xPosOwnGroundline; y = yPosLeftPenaltyArea;},
    {x = xPosOwnGroundline; y = yPosRightPenaltyArea;}
  ];

  tCorner90 = [
    {x = xPosHalfWayLine; y = centerCircleRadius;},
    {x = xPosHalfWayLine; y = -centerCircleRadius;},
    {x = xPosHalfWayLine; y = yPosRightSideline;}
  ];

  tCorner180 = [
    {x = xPosHalfWayLine; y = centerCircleRadius;},
    {x = xPosHalfWayLine; y = -centerCircleRadius;},
    {x = xPosOpponentGroundline; y = yPosLeftPenaltyArea;},
    {x = xPosOpponentGroundline; y = yPosRightPenaltyArea;}
  ];

  tCorner270 = [
    {x = xPosHalfWayLine; y = centerCircleRadius;},
    {x = xPosHalfWayLine; y = -centerCircleRadius;},
    {x = xPosHalfWayLine; y = yPosLeftSideline;}
  ];

  lCorner0 = [
    {x = xPosHalfWayLine; y = centerCircleRadius;},
    {x = xPosHalfWayLine; y = -centerCircleRadius;},
    {x = xPosOwnGroundline; y = yPosLeftPenaltyArea;},
    {x = xPosOwnGroundline; y = yPosRightPenaltyArea;},
    {x = xPosHalfWayLine; y = yPosRightSideline;},
    {x = xPosOwnGroundline; y = yPosRightSideline;},
    {x = xPosOpponentPenaltyArea; y = yPosRightPenaltyArea;}
  ];

  lCorner90 = [
    {x = xPosHalfWayLine; y = centerCircleRadius;},
    {x = xPosHalfWayLine; y = -centerCircleRadius;},
    {x = xPosOpponentGroundline; y = yPosLeftPenaltyArea;},
    {x = xPosOpponentGroundline; y = yPosRightPenaltyArea;},
    {x = xPosHalfWayLine; y = yPosRightSideline;},
    {x = xPosOpponentGroundline; y = yPosRightSideline;},
    {x = xPosOwnPenaltyArea; y = yPosRightPenaltyArea;}
  ];

  lCorner180 = [
    {x = xPosHalfWayLine; y = centerCircleRadius;},
    {x = xPosHalfWayLine; y = -centerCircleRadius;},
    {x = xPosOpponentGroundline; y = yPosLeftPenaltyArea;},
    {x = xPosOpponentGroundline; y = yPosRightPenaltyArea;},
    {x = xPosHalfWayLine; y = yPosLeftSideline;},
    {x = xPosOpponentGroundline; y = yPosLeftSideline;},
    {x = xPosOwnPenaltyArea; y = yPosLeftPenaltyArea;}
  ];

  lCorner270 = [
    {x = xPosHalfWayLine; y = centerCircleRadius;},
    {x = xPosHalfWayLine; y = -centerCircleRadius;},
    {x = xPosOwnGroundline; y = yPosLeftPenaltyArea;},
    {x = xPosOwnGroundline; y = yPosRightPenaltyArea;},
    {x = xPosHalfWayLine; y = yPosLeftSideline;},
    {x = xPosOwnGroundline; y = yPosLeftSideline;},
    {x = xPosOpponentPenaltyArea; y = yPosLeftPenaltyArea;}
  ];
};
