// Is logging enabled?
enabled = true;

// The directory that will contain the log file.
path = "/home/nao/logging";

// The number of buffers allocated.
numOfBuffers = 12000;

// The size of each buffer in bytes.
sizeOfBuffer = 200000;

// The scheduling priority of the writer thread.
writePriority = -2;

// Logging will stop if less MB are available to the target device.
minFreeDriveSpace = 100;

// Representations to log per thread
representationsPerThread = [
  {
    thread = Upper;
    representations = [
      JPEGImage,

      BallPercept,
      BallSpots,
      BodyContour,
      CameraInfo,
      CameraMatrix,
      CirclePercept,
      FieldBoundary,
      FrameInfo,
      ImageCoordinateSystem,
      LinesPercept,
      ObstaclesFieldPercept,
      ObstaclesImagePercept,
      PenaltyMarkPercept,
    ];
  },
  {
    thread = Lower;
    representations = [
      JPEGImage,

      BallPercept,
      BallSpots,
      BodyContour,
      CameraInfo,
      CameraMatrix,
      CirclePercept,
      FieldBoundary,
      FrameInfo,
      ImageCoordinateSystem,
      LinesPercept,
      ObstaclesFieldPercept,
      ObstaclesImagePercept,
      PenaltyMarkPercept,
    ];
  },
  {
    thread = Cognition;
    representations = [
      ActivationGraph,
      AlternativeRobotPoseHypothesis,
      ArmMotionRequest,
      AudioData,
      BallModel,
      CameraCalibration,
      FootSoleRotationCalibration,
      GameInfo,
      IMUCalibration,
      MotionRequest,
      ObstacleModel,
      OpponentTeamInfo,
      OwnTeamInfo,
      RobotHealth,
      RobotInfo,
      RobotPose,
      SelfLocalizationHypotheses,
      SideInformation,
      TeamBallModel,
      TeamData,
      Whistle,
    ];
  },
  {
    thread = Motion;
    representations = [
      FallDownState,
      FootOffset,
      FootSupport,
      FrameInfo,
      FsrSensorData,
      InertialSensorData,
      InertialData,
      JointCalibration,
      JointRequest,
      JointSensorData,
      KeyStates,
      MotionInfo,
      OdometryData,
      SystemSensorData,
      WalkLearner,
      WalkStepData,
    ];
  }
];
